name: Continuous Integration and Delivery

on: [push]

env:
    WEB_IMAGE: ghcr.io/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')/web
    NGINX_IMAGE: ghcr.io/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')/nginx

jobs:

    build:
        name: Build docker image
        runs-on: ubuntu-latest
        steps:
            - name: Checkout master
              uses: actions/checkout@v1
            - name: add environment variables
              run: |
                echo DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }} >> .env.prod
                echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env.prod
                echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env.prod
                echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env.prod
                echo POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} >> .env.prod
                echo POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} >> .env.prod
                echo DATABASE=${{ secrets.DATABASE }} >> .env.prod
                echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env.prod
                echo DEFAULT_FROM_EMAIL=${{ secrets.DEFAULT_FROM_EMAIL }} >> .env.prod
                echo EMAIL_HOST=${{ secrets.EMAIL_HOST }} >> .env.prod
                echo EMAIL_PORT=${{ secrets.EMAIL_PORT }} >> .env.prod
                echo EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }} >> .env.prod
                echo EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }} >> .env.prod
                echo POSTGRES_TEST_DB=${{ secrets.POSTGRES_TEST_DB }} >> .env.prod
                echo POSTGRES_TEST_USER=${{ secrets.POSTGRES_TEST_USER }} >> .env.prod
                echo POSTGRES_TEST_PASSWORD=${{ secrets.POSTGRES_TEST_PASSWORD }} >> .env.prod
                echo DOCKER_DEFAULT_PLATFORM=${{ secrets.DOCKER_DEFAULT_PLATFORM }} >> .env.prod

                echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env.prod.db
                echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env.prod.db
                echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env.prod.db

            - name: Set environment variables
              run: |
                echo "WEB_IMAGE=$(echo ${{env.WEB_IMAGE}} )" >> $GITHUB_ENV
                echo "NGINX_IMAGE=$(echo ${{env.NGINX_IMAGE}} )" >> $GITHUB_ENV

            - name: Log in Github Packages
              run: echo ${PERSONAL_ACCESS_TOKEN} | docker login ghcr.io -u ${{ secrets.NAMESPACE }} --password-stdin
              env:
                PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
            
            - name: Pull images
              run: |
                docker pull ${{ env.WEB_IMAGE }} || true
                docker pull ${{ env.NGINX_IMAGE }} || true
            - name: Build images
              run: |
                docker-compose -f docker-compose.ci.yml build
            - name: Push images
              run: |
                docker push ${{ env.WEB_IMAGE }}
                docker push ${{ env.NGINX_IMAGE }}
                
    deploy:
      name: Deploy to DigitalOcean
      runs-on: ubuntu-latest
      needs: build
      steps:
        - name: Checkout master
          uses: actions/checkout@v1
        - name: Add environment variables to .env.prod and .env.prod.db
          run: |
            echo DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }} >> .env.prod
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env.prod
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env.prod
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env.prod
            echo POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} >> .env.prod
            echo POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} >> .env.prod
            echo DATABASE=${{ secrets.DATABASE }} >> .env.prod
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env.prod
            echo DEFAULT_FROM_EMAIL=${{ secrets.DEFAULT_FROM_EMAIL }} >> .env.prod
            echo EMAIL_HOST=${{ secrets.EMAIL_HOST }} >> .env.prod
            echo EMAIL_PORT=${{ secrets.EMAIL_PORT }} >> .env.prod
            echo EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }} >> .env.prod
            echo EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }} >> .env.prod
            echo POSTGRES_TEST_DB=${{ secrets.POSTGRES_TEST_DB }} >> .env.prod
            echo POSTGRES_TEST_USER=${{ secrets.POSTGRES_TEST_USER }} >> .env.prod
            echo POSTGRES_TEST_PASSWORD=${{ secrets.POSTGRES_TEST_PASSWORD }} >> .env.prod
            echo DOCKER_DEFAULT_PLATFORM=${{ secrets.DOCKER_DEFAULT_PLATFORM }} >> .env.prod

            echo WEB_IMAGE=${{ env.WEB_IMAGE }} >> .env.prod
            echo NGINX_IMAGE=${{ env.NGINX_IMAGE }} >> .env.prod
            echo NAMESPACE=${{ secrets.NAMESPACE }} >> .env.prod
            echo PERSONAL_ACCESS_TOKEN=${{ secrets.PERSONAL_ACCESS_TOKEN }} >> .env.prod

            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env.prod.db
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env.prod.db
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env.prod.db

        - name: Add the private SSH key to the ssh-agent
          env:
            SSH_AUTH_SOCK: /tmp/ssh_agent.sock
          run: |
            mkdir -p ~/.ssh
            ssh-agent -a $SSH_AUTH_SOCK > /dev/null
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            ssh-add - <<< "${{ secrets.PRIVATE_KEY }}"

        - name: Build and deploy images on DigitalOcean
          env:
            SSH_AUTH_SOCK: /tmp/ssh_agent.sock
          run: |
            scp  -o StrictHostKeyChecking=no -r ./.env.prod ./docker-compose.prod.yml root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }}:/app
            scp  -o StrictHostKeyChecking=no -r Dockerfile.prod root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }}:/app
            scp  -o StrictHostKeyChecking=no -r entrypoint.prod.sh root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }}:/app
            ssh -o StrictHostKeyChecking=no root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }} << 'ENDSSH'
              cp .env.prod /app
              cp .env.prod.db /app
              cp .env /app

              cp Dockerfile.prod /app
              cp entrypoint.prod.sh /app

              cd /app
              echo '==========================='
              pwd
              ls --all
              echo '==========================='

              echo DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }} >> .env.prod
              echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env.prod
              echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env.prod
              echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env.prod
              echo POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} >> .env.prod
              echo POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} >> .env.prod
              echo DATABASE=${{ secrets.DATABASE }} >> .env.prod
              echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env.prod
              echo DEFAULT_FROM_EMAIL=${{ secrets.DEFAULT_FROM_EMAIL }} >> .env.prod
              echo EMAIL_HOST=${{ secrets.EMAIL_HOST }} >> .env.prod
              echo EMAIL_PORT=${{ secrets.EMAIL_PORT }} >> .env.prod
              echo EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }} >> .env.prod
              echo EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }} >> .env.prod
              echo POSTGRES_TEST_DB=${{ secrets.POSTGRES_TEST_DB }} >> .env.prod
              echo POSTGRES_TEST_USER=${{ secrets.POSTGRES_TEST_USER }} >> .env.prod
              echo POSTGRES_TEST_PASSWORD=${{ secrets.POSTGRES_TEST_PASSWORD }} >> .env.prod
              echo DOCKER_DEFAULT_PLATFORM=${{ secrets.DOCKER_DEFAULT_PLATFORM }} >> .env.prod

              echo WEB_IMAGE=${{ env.WEB_IMAGE }} >> .env.prod
              echo NGINX_IMAGE=${{ env.NGINX_IMAGE }} >> .env.prod
              echo NAMESPACE=${{ secrets.NAMESPACE }} >> .env.prod
              echo PERSONAL_ACCESS_TOKEN=${{ secrets.PERSONAL_ACCESS_TOKEN }} >> .env.prod

              echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env.prod.db
              echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env.prod.db
              echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env.prod.db
              
              source .env.prod
              docker login ghcr.io -u $NAMESPACE -p $PERSONAL_ACCESS_TOKEN

              # docker pull $WEB_IMAGE
              docker pull ghcr.io/thelonggoodbuy/swipe_api/web:latest
              
              # docker pull $NGINX_IMAGE
              docker pull ghcr.io/thelonggoodbuy/swipe_api/nginx:latest
              
              docker-compose -f docker-compose.prod.yml up -d
              
            ENDSSH
